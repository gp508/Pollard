import Pollard
import Arith


main :: IO ()
main = putStrLn(show (test [2838820489, 875400047, 5673936377, 640968733, 4807231867, 2908188677, 395029699, 3068264623, 2955243007, 840519419, 1303270687, 1278772471, 900750691, 4707349139, 3708340297, 185491003, 491309501, 379542409, 6330106087, 6010434433, 1124926003, 323020807, 4086563843, 372374557, 2387910193, 263439851, 23867483, 1221530701, 1269062309, 113079643, 703321361, 6661286941, 4235702399, 7886319377, 119713717, 5701554629, 2348427331, 316791637, 2358528751, 876059629, 2810561599, 5725799071, 1028421463, 1547083513, 2809661831, 7942235383, 175831787, 92463911, 2046410183, 3651938189, 748582579, 702215287, 1912096117, 239487161, 1520281513, 3047657233, 4149275047, 5488175009, 2691486731, 7001333233, 354036737, 85321711, 6286925851, 559040759, 2621128693, 4077844559, 3076633319, 8887256437, 316527917, 6499024871, 3097538789, 7517651027, 2963592641, 2499364991, 1045559899, 3874007029, 5083289209, 1397413049, 3994983023, 238484137, 190946017, 2560628597, 26191637, 137930083, 628289681, 234627179, 1379515849, 4409609363, 2017323463, 3779649919, 834801911, 256383601, 2537453999, 4458376729, 40836743, 1153064179, 265501471, 2241874787, 2059777387, 901704721]))

benchmark :: [Integer] -> [IO()]
benchmark [] = []
benchmark (x:xs) = 
    putStrLn (show (Arith.integer_of_nat(rho (Arith.nat_of_integer x)))) : benchmark xs


test :: [Integer] -> Integer
test [] = 0
test (x:xs) = factorised x + test xs

factorised :: Integer -> Integer
factorised x = (if Arith.integer_of_nat(rho (Arith.nat_of_integer x)) == 1 then 1 else if Arith.integer_of_nat(rho (Arith.nat_of_integer x)) == x then 1 else 0)